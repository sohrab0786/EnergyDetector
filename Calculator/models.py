from django.db import models

# from .forms import Simple
# Create your models here.
class Simple(models.Model):
	file_uuid = models.CharField(max_length=50, default='0000000', editable=False)
	Location = models.CharField(max_length=50)
	Building_type = models.CharField(max_length=50)
	Roof_area = models.CharField(max_length=50)
	Roof_type = models.CharField(max_length=50)
	Radiant_barrier = models.CharField(max_length=10)
	Normal_Roof = models.CharField(max_length=50)
	Cool_roof = models.CharField(max_length=50)
	Normal_Roof_e = models.CharField(max_length=50)
	Cool_roof_e = models.CharField(max_length=50)
	HVAC_details = models.CharField(max_length=50)
	Electricity = models.CharField(max_length=50)
	cooling_compare = models.TextField(max_length=1000,default='x')
	heating_compare = models.TextField(max_length=1000,default='x')
	Total_Savings = models.CharField(max_length=50,default='x')
	Total_Savings_Percent = models.CharField(max_length=50,default='x')
	Annual_Savings = models.CharField(max_length=50,default='x')
	Heating_Base = models.CharField(max_length=50,default='x')
	Heating_Proposed = models.CharField(max_length=50,default='x')
	Heating_Savings = models.CharField(max_length=50,default='x')
	Cooling_Base = models.CharField(max_length=50,default='x')
	Cooling_Proposed = models.CharField(max_length=50,default='x')
	Cooling_Savings = models.CharField(max_length=50,default='x')
	Interior_Equipment_Base = models.CharField(max_length=50,default='x')
	Interior_Equipment_Proposed = models.CharField(max_length=50,default='x')
	Interior_Equipment_Savings = models.CharField(max_length=50,default='x')
	Interior_Lighting_Base = models.CharField(max_length=50,default='x')
	Interior_Lighting_Proposed = models.CharField(max_length=50,default='x')
	Interior_Lighting_Savings = models.CharField(max_length=50,default='x')
	Fans_Base = models.CharField(max_length=50,default='x')
	Fans_Proposed = models.CharField(max_length=50,default='x')
	Fans_Savings = models.CharField(max_length=50,default='x')
	Pumps_Base = models.CharField(max_length=50,default='x')
	Pumps_Proposed = models.CharField(max_length=50,default='x')
	Pumps_Savings = models.CharField(max_length=50,default='x')
	Heat_Rejection_Base = models.CharField(max_length=50,default='x')
	Heat_Rejection_Proposed = models.CharField(max_length=50,default='x')
	Heat_Rejection_Savings = models.CharField(max_length=50,default='x')
	Total_Base = models.CharField(max_length=50,default='x')
	Total_Proposed = models.CharField(max_length=50,default='x')
	heat_save = models.CharField(max_length=50,default='x')
	cool_save = models.CharField(max_length=50,default='x')
	total_save = models.CharField(max_length=50,default='x')
	heat_save_area = models.CharField(max_length=50,default='x')
	cool_save_area = models.CharField(max_length=50,default='x')
	total_save_area = models.CharField(max_length=50,default='x')
	heat_save_cost = models.CharField(max_length=50,default='x')
	cool_save_cost = models.CharField(max_length=50,default='x')
	total_save_cost = models.CharField(max_length=50,default='x')
	task_id = models.CharField(max_length=100, blank=True)
	emailid = models.CharField(max_length=100,blank=True)
	username = models.CharField(max_length=100,blank=True)
	# time = models.CharField(max_length=100,blank=True)
	result_status = models.CharField(max_length=100,blank=True)
	time = models.DateTimeField(auto_now = True)




class Detailed_Data(models.Model):
	file_uuid = models.CharField(max_length=50, default='0000000', editable=False)
	Location = models.CharField(max_length=50)
	Building_type = models.CharField(max_length=50)
	Roof_area = models.CharField(max_length=50)
	Layer_1 = models.CharField(max_length=50)
	Layer_2 = models.CharField(max_length=50)
	Layer_3 = models.CharField(max_length=50)
	Layer_4 = models.CharField(max_length=50)
	Radiant_barrier = models.CharField(max_length=10)
	Reflectivity_base = models.CharField(max_length=50)
	Emissivity_base = models.CharField(max_length=50)
	Cost_base = models.CharField(max_length=50)
	Life_base = models.CharField(max_length=50)
	Reflectivity_proposed = models.CharField(max_length=50)
	Emissivity_proposed = models.CharField(max_length=50)
	Cost_proposed = models.CharField(max_length=50)
	Life_proposed = models.CharField(max_length=50)
	System_cop = models.CharField(max_length=50)
	Lighting_power = models.CharField(max_length=50)
	Equipment_power = models.CharField(max_length=50)
	win_area_north = models.CharField(max_length=50)
	win_area_south = models.CharField(max_length=50)
	win_area_west = models.CharField(max_length=50)
	win_area_east = models.CharField(max_length=50)
	HVAC_details = models.CharField(max_length=50)
	Electricity = models.CharField(max_length=50)
	cooling_compare = models.TextField(max_length=1000,default='x')
	heating_compare = models.TextField(max_length=1000,default='x')
	Total_Savings = models.CharField(max_length=50,default='x')
	Total_Savings_Percent = models.CharField(max_length=50,default='x')
	Annual_Savings = models.CharField(max_length=50,default='x')
	Heating_Base = models.CharField(max_length=50,default='x')
	Heating_Proposed = models.CharField(max_length=50,default='x')
	Heating_Savings = models.CharField(max_length=50,default='x')
	Cooling_Base = models.CharField(max_length=50,default='x')
	Cooling_Proposed = models.CharField(max_length=50,default='x')
	Cooling_Savings = models.CharField(max_length=50,default='x')
	Interior_Equipment_Base = models.CharField(max_length=50,default='x')
	Interior_Equipment_Proposed = models.CharField(max_length=50,default='x')
	Interior_Equipment_Savings = models.CharField(max_length=50,default='x')
	Interior_Lighting_Base = models.CharField(max_length=50,default='x')
	Interior_Lighting_Proposed = models.CharField(max_length=50,default='x')
	Interior_Lighting_Savings = models.CharField(max_length=50,default='x')
	Fans_Base = models.CharField(max_length=50,default='x')
	Fans_Proposed = models.CharField(max_length=50,default='x')
	Fans_Savings = models.CharField(max_length=50,default='x')
	Pumps_Base = models.CharField(max_length=50,default='x')
	Pumps_Proposed = models.CharField(max_length=50,default='x')
	Pumps_Savings = models.CharField(max_length=50,default='x')
	Heat_Rejection_Base = models.CharField(max_length=50,default='x')
	Heat_Rejection_Proposed = models.CharField(max_length=50,default='x')
	Heat_Rejection_Savings = models.CharField(max_length=50,default='x')
	Total_Base = models.CharField(max_length=50,default='x')
	Total_Proposed = models.CharField(max_length=50,default='x')
	heat_save = models.CharField(max_length=50,default='x')
	cool_save = models.CharField(max_length=50,default='x')
	total_save = models.CharField(max_length=50,default='x')
	heat_save_area = models.CharField(max_length=50,default='x')
	cool_save_area = models.CharField(max_length=50,default='x')
	total_save_area = models.CharField(max_length=50,default='x')
	heat_save_cost = models.CharField(max_length=50,default='x')
	cool_save_cost = models.CharField(max_length=50,default='x')
	total_save_cost = models.CharField(max_length=50,default='x')
	task_id = models.CharField(max_length = 100, blank = True)
	emailid = models.CharField(max_length=100,blank=True)
	username = models.CharField(max_length=100,blank=True)
	result_status = models.CharField(max_length=100,blank=True)
	time = models.DateTimeField(auto_now = True)


class Parametric_Data(models.Model):
	file_uuid = models.CharField(max_length=50, default='0000000', editable=False)
	Location = models.CharField(max_length=50)
	Building_type = models.CharField(max_length=50)
	Roof_area = models.CharField(max_length=50)
	Layer_1 = models.CharField(max_length=50)
	Layer_2 = models.CharField(max_length=50)
	Layer_3 = models.CharField(max_length=50)
	Layer_4 = models.CharField(max_length=50)
	Radiant_barrier = models.CharField(max_length=10)
	Reflectivity_base = models.CharField(max_length=50)
	Emissivity_base = models.CharField(max_length=50)
	Cost_base = models.CharField(max_length=50)
	Life_base = models.CharField(max_length=50)
	Reflectivity_proposed = models.CharField(max_length=50)
	Emissivity_proposed = models.CharField(max_length=50)
	Cost_proposed = models.CharField(max_length=50)
	Life_proposed = models.CharField(max_length=50)
	System_cop = models.CharField(max_length=50)
	Lighting_power = models.CharField(max_length=50)
	Equipment_power = models.CharField(max_length=50)
	win_area_north = models.CharField(max_length=50)
	win_area_south = models.CharField(max_length=50)
	win_area_west = models.CharField(max_length=50)
	win_area_east = models.CharField(max_length=50)
	HVAC_details = models.CharField(max_length=50)
	Electricity = models.CharField(max_length=50)
	cooling_compare = models.TextField(max_length=1000,default='x')
	heating_compare = models.TextField(max_length=1000,default='x')
	Total_Savings = models.CharField(max_length=50,default='x')
	Total_Savings_Percent = models.CharField(max_length=50,default='x')
	Annual_Savings = models.CharField(max_length=50,default='x')
	Heating_Base = models.CharField(max_length=50,default='x')
	Heating_Proposed = models.CharField(max_length=50,default='x')
	Heating_Savings = models.CharField(max_length=50,default='x')
	Cooling_Base = models.CharField(max_length=50,default='x')
	Cooling_Proposed = models.CharField(max_length=50,default='x')
	Cooling_Savings = models.CharField(max_length=50,default='x')
	Interior_Equipment_Base = models.CharField(max_length=50,default='x')
	Interior_Equipment_Proposed = models.CharField(max_length=50,default='x')
	Interior_Equipment_Savings = models.CharField(max_length=50,default='x')
	Interior_Lighting_Base = models.CharField(max_length=50,default='x')
	Interior_Lighting_Proposed = models.CharField(max_length=50,default='x')
	Interior_Lighting_Savings = models.CharField(max_length=50,default='x')
	Fans_Base = models.CharField(max_length=50,default='x')
	Fans_Proposed = models.CharField(max_length=50,default='x')
	Fans_Savings = models.CharField(max_length=50,default='x')
	Pumps_Base = models.CharField(max_length=50,default='x')
	Pumps_Proposed = models.CharField(max_length=50,default='x')
	Pumps_Savings = models.CharField(max_length=50,default='x')
	Heat_Rejection_Base = models.CharField(max_length=50,default='x')
	Heat_Rejection_Proposed = models.CharField(max_length=50,default='x')
	Heat_Rejection_Savings = models.CharField(max_length=50,default='x')
	Total_Base = models.CharField(max_length=50,default='x')
	Total_Proposed = models.CharField(max_length=50,default='x')
	heat_save = models.CharField(max_length=50,default='x')
	cool_save = models.CharField(max_length=50,default='x')
	total_save = models.CharField(max_length=50,default='x')
	heat_save_area = models.CharField(max_length=50,default='x')
	cool_save_area = models.CharField(max_length=50,default='x')
	total_save_area = models.CharField(max_length=50,default='x')
	heat_save_cost = models.CharField(max_length=50,default='x')
	cool_save_cost = models.CharField(max_length=50,default='x')
	total_save_cost = models.CharField(max_length=50,default='x')
	kvalue = models.CharField(max_length=50)
	task_id = models.CharField(max_length = 100, blank = True)	
	emailid = models.CharField(max_length=100,blank=True)
	username = models.CharField(max_length=100,blank=True)
	result_status = models.CharField(max_length=100,blank=True)
	time = models.DateTimeField(auto_now = True)